#compdef squashmount
local curcontext="$curcontext" state state_descr line
typeset -A opt_args
_arguments -C -s -S : \
'(* -)'{'--help','-h'}'[print a brief help]' \
'(* -)'{'--man','-\\?'}'[show extended help as a manpage]' \
'(* -)'{'--version','-V'}'[print version and exit]' \
'*'{'-v','--verbose'}'[be more verbose (accumulative)]' \
'*'{'-q','--quiet'}'[be more quiet (accumulative)]' \
{'*-a+','*--arg='}'[add specified arg for user]:user arg:_files' \
{'*-c+','*--config='}'[add specified configfile to list]:configfile:_files' \
'*--system-config=[add specified configfile to fallbacks]:configfile:_files' \
{'*-u+','*--umount='}'[add specified option to umount DIR]:umount option:("-r")' \
{'*-U+','*--umount-ro='}'[add specified option to umount READONLY]:umount option:("-r")' \
'*--fumount=[add specified option to fusermount -u DIR)]:umount option:()' \
'*--fumount-ro=[add specified option to fusermount -u READONLY]:umount option:()' \
'*'{'--bind=','-2+'}'[replace directory in stored data]:directory path to replace:_files -P/ -W "(/)":directory path to replace with:_files -P/ -W "(/)"' \
{'(-/)--root=','(--root)-/'}'[use specified dir as original root]:original root directory:_files -P/ -W "(/)" -/' \
'--rundir=[use specified dir instead of /run/squashmount)]:runtime config dir:_files -/' \
'(--no-backup --nobackup -B '{'--backup)-b+','-b)--backup='}'[override BACKUP with specified file or appendix]:file or appendix:_files' \
'(--backup -b '{'--no-backup --nobackup)-B','--nobackup -B)--no-backup','--no-backup -B)--nobackup'}'[do not make a backup]' \
{'(--tempdir)-D+','(-D)--tempdir='}'[override TEMPDIR with specified dir]:tempdir:_files -/' \
{'(--compression --comp)-x','(--comp -x)--compression','(--compression -x)--comp'}'[override COMPRESSION with specified mode]:compression mode:(zstd xz lzma gzip lzo lz4)' \
'(--force-squash --squash-force --squash --no-squash --nosquash -s -n '{'--threshold)-t+','-t)--threshold='}'[set THRESHOLD to specified size]:threshold size:(0 1m 10m 20m 30m 40m 500k 600k 700k 800k 900k "")' \
'(--threshold --no-squash --nosquash --squash -t -s -n '{'--force-squash)--squash-force','--squash-force)--force-squash'}'[force resquash\: -t -2]' \
'(--threshold --force-squash --squash-force --no-squash --nosquash -t -n '{'--squash)-s','-s)--squash'}'[do resquash\: -t 0]' \
'(--threshold --force-squash --squash-force --squash -t -s '{'--no-squash --nosquash)-n','--nosquash -n)--no-squash','--no-squash -n)--nosquash'}'[no resquash\: -t -1]' \
{'(--separator)-S+','(-S)--separator='}'[use specified separator for print-...]:separator' \
'--squash-verbose=[use specified symbols for mksquash verbosity]:symbols [inpqrINPQR], flags (1-2+?!):(q nq ip pi r)' \
{'(--processors)-p+','(-p)--processors='}'[use specified mksquashfs -processors number]:processors:(\  1 2 3 4 5 6 7 8 9)' \
{'(--mem)-m+','(-m)--mem='}'[use specified mksquashfs -mem size]:memory:(\  210M 466M 1954M 3054M 7054M)' \
'--pass-dir[Args are paths]' \
{'(--interactive)-i','(-i)--interactive'}'[ask before cleaning directories]' \
'(--no-kill --nokill -K --kill-or-resquash -R '{'--kill)-k','-k)--kill'}'[clean without resquashing]' \
'(--no-kill --nokill -K --kill -k '{'--kill-or-resquash)-R','-R)--kill-or-resquash'}'[clean if not resquashing]' \
'(--kill -k --kill-or-resquash -R '{'--nokill --no-kill)-K','--nokill -K)--no-kill','--no-kill -K)--nokill'}'[Remove effect of --kill*]' \
{'(--force)-f','(-f)--force'}'[force action even if unreasonable]' \
{'(--ignore-state)-I','(-I)--ignore-state'}'[ignore state of mounts/umounts]' \
{'(--reset)-r','(-r)--reset'}'[reset after umounting]' \
'(--no-color --nocolor -C '{'-F)--color','(--color)-F'}'[force color on non-terminal]' \
'(--color -F '{'--no-color --nocolor)-C','--nocolor -C)--no-color','--no-color -E)--nocolor'}'[non-colored output]' \
'(--no-star --nostar)--star[print stars for info commands]' \
'(--star '{'--nostar)--no-star','--no-star)--nostar'}'[do not print stars]' \
'(--no-locking --nolocking)--locking[use file locking]' \
'(--locking '{'--nolocking)--no-locking','--no-locking)--nolocking'}'[do not use file locking]' \
'(--no-fatal --nofatal)--fatal[return nonzero on every failure]' \
'(--fatal '{'--nofatal)--no-fatal','--no-fatal)--nofatal'}'[return nonzero only on fatal failure]' \
'(--no-error -noerror -E '{'-e)--error','(--error)-e'}'[break on error]' \
'(--error -e '{'--no-error --noerror)-E','--noerror -E)--no-error','--no-error -E)--noerror'}'[no break on error]' \
'(--allow --noallow-other --no allow)--allow[allow_other default]' \
'(--allow '{'--noallow)--no-allow','--no-allow)--noallow'}'[no allow_other default]' \
'--user[user mode mounting]' \
{'(--lazy)-L+','(-L)--lazy='}'[0: not lazy, 1: lazy retry, -1: only lazy]:lazy mode:(0 1 -1)' \
{'(--lsof)-L+','(-l)--lsof='}'["": no lsof, 0: retry lazy, 1: error, -1: only lazy]:lsof mode:("" 0 1 -1)' \
'--lsof-ro=["": no lsof, 0: retry lazy, 1: error, -1: only lazy]:lsof mode:("" 0 1 -1)' \
'(--no-ll --noll)--ll[prefer squashfuse_ll over squashfuse]' \
'(--ll '{'--noll)--no-ll','--no-ll)--noll'}'[do not use squasfuse_ll]' \
{'(--order)-o+','(-o)--order='}'[set \@order to specified value]:tool order:("overlay!?,overlayfs!?,aufs!,unionfs-fuse!,unionfs!,funionfs!" "unionfs-fuse!!,funionfs!!" "overlay,overlayfs,aufs!,unionfs-fuse!" bind aufs overlay overlayfs unionfs unionfs-fuse funionfs)' \
{'(--squashorder)-O+','(-O)--squashorder='}'[set \@squashorder to specified value]:tool order:("squashfs!?,squashfuse!" "squasfuse!!" squashfs squashfuse)' \
{'*--title=','*-T+'}'[use specified title option]:title option:_title_opt' \
'1:command:->cmds' \
'*:mask:->mask'
local ret=$?
case $state in
(cmds)
	local cmds
	cmds=(
	'help:print a brief help'
	'man:show extended help as a manpage'
	'mount:mount'
	'start:mount, creating squashfile first if necessary'
	'umount:umount, squashing/cleaning if necessary'
	'stop:umount and forget'
	'check:check whether DIR is empty'
	'forget:forget all information in /run/squashdir'
	'remount:remount, squashing/cleaning if necessary'
	'restart:stop and start'
	'set:modify state in /run/squashdir'
	'reset:restore state in /run/squashdir'
	{'status','list'}':output infos; depending on -v -vv'
	'print-tag:print tag'
	'print-dir:print DIR directory'
	'print-readonly:print READONLY directory or 1'
	'print-changes:print CHANGES directory'
	'print-file:print squash-file path'
	'print-type:print mount type'
	'print-squashtype:print squash mount type'
	'print-new:print 1 if there is new data'
	'print-will-squash:print 1 if data is resquashed'
	'print-threshold:print active threshold value'
	'print-kill:print 1 is --kill is active'
	)
	_describe -t commands 'command' cmds && ret=0;;
(mask)
	local expl
	if [[ -z ${opt_args[--pass-dir]++} ]]
	then	_tags masks
		_tags && {
			local masks
			masks=(${(f)"$(_call_program print-masks 'squashmount --no-locking -q print-tag 2>/dev/null')"})
			_description masks expl 'mask'
			compadd "$expl[@]" - $masks
		} && ret=0
	else	local paths
		paths=(${(f)"$(_call_program print-dirs 'squashmount --no-locking -q print-dir 2>/dev/null')"})
		_canonical_paths -A paths directories 'mount point' && ret=0
	fi;;
esac
return ret
